
# default: /<application name>
contextPath: /

decorator:
   # https://github.com/navikt/pus-decorator/blob/master/src/main/java/no/nav/pus/decorator/HeaderType.java
   headerType: WITH_MENU
   # https://github.com/navikt/pus-decorator/blob/master/src/main/java/no/nav/pus/decorator/FooterType.java
   footerType: WITHOUT_ALPHABET


# default: no support for authentication and authorization
auth: # any value in the following attributes will activate support for authentication and authorization (additional configuration properties will be required)
   enforce: false # if pus-decorator should automatically login users before serving the application. default: true
   loginUrl: https://loginservice.nav.no/login # login-endpoint that pus-decorator will redirect to - required when enforce=true
   minSecurityLevel: 4 # default: 4 (redirects users with lower security level)

# used to assign url patterns to forward targets.
# files as forward targets are expected to be found under /app and will be decorated.

spa: # default: /* => /index.html
 - forwardTarget: /app-1.html
   urlPattern: /app1

 - forwardTarget: /small/smaller-app.html
   urlPattern: /small/app/*




# the example below will create the following proxy-setup:

# | end-user request                                         | proxied request url                       |
# |----------------------------------------------------------|-------------------------------------------|
# | https://my-decorated-app.com/backend/hello-world         | http://my-backend-api/backend/hello-world |
# | https://my-decorated-app.com/pingable                    | http://pingable-service/pingable          |
# | https://my-decorated-app.com/logger/log                  | http://my-logger/log                      |
# | https://my-decorated-app.com/example/a/great/example     | https://www.example.com/a/great/example   |
#
# | proxy-target     | ping request url                       |
# |------------------|----------------------------------------|
# | my-backend-api   | http://my-backend-api/backend/api/ping |
# | pingable-service | http://pingable-service/               |
# | my-logger        | http://my-logger/api/ping              |
# | www.example.com  | https://www.example.com/ping           |

proxy: # default: /frontendlogger => http://frontendlogger.default is added, but may be overwritten.

 - contextPath: /backend
   baseUrl: http://my-backend-api
   validateOidcToken: true # default: true
   minSecurityLevel: 4 # default: 4 (disable with 0/null)
   # NB: if a backend either defaults to, or is configured to, perform authentication and/or authorization -
   # all request will be denied unless this functionality is activated in the auth-section above

 - contextPath: /pingable
   baseUrl: http://pingable-service
   pingRequestPath: /

 - contextPath: /logger
   baseUrl: http://my-logger
   requestRewrite: REMOVE_CONTEXT_PATH

 - contextPath: /example
   baseUrl: https://www.example.com
   requestRewrite: REMOVE_CONTEXT_PATH
   pingRequestPath: /ping



# the example below will create the following redirects:
# | end-user request                                         | redirect                                          |
# |----------------------------------------------------------|---------------------------------------------------|
# | https://tjenester.nav.no/my-app                          | https://my-app.nav.no                             |
# | https://tjenester.nav.no/my-app/deep/link?a=b            | https://my-app.nav.no/deep/link?a=b               |
# | https://my-app.nav.no/other-app                          | https://tjenester.nav.no/other-app                |
# | https://my-app.nav.no/other-app/deep/link?a=b            | https://tjenester.nav.no/other-app/deep/link?a=b  |
redirect:
 - from: /my-app
   to: https://my-app.nav.no
 - from: /other-app
   to: https://tjenester.nav.no/other-app
